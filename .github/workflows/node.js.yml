name: Node.js CI and Deploy to cPanel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: ðŸšš Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    # Use sparse checkout to only include the backend directory
    - name: Enable Sparse Checkout
      run: |
        git config core.sparseCheckout true
        echo "backend/*" >> .git/info/sparse-checkout
        git read-tree HEAD

    # List files to confirm the correct files are checked out
    - name: List Files After Sparse Checkout
      run: ls -R  # List from the root to confirm directory structure


    # Install dependencies in the backend directory
    - name: Install dependencies
      working-directory: ./backend  # Specify backend directory
      run: npm ci

  deploy:

    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: ðŸšš Checkout Code for Deployment
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    # Use sparse checkout to only include the backend directory for deployment
    - name: Enable Sparse Checkout for Deployment
      run: |
        git config core.sparseCheckout true
        echo "backend/*" >> .git/info/sparse-checkout
        git read-tree HEAD

    # List files to confirm the correct files are checked out for deployment
    - name: List Files After Sparse Checkout for Deployment
      run: ls -R  # List from the root to confirm directory structure

    # Use the latest Node.js version for deployment
    - name: Use Node.js 20.x for deployment
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    # Install dependencies in the backend directory for deployment
    - name: Install Dependencies for Deploy
      working-directory: ./backend  # Ensure the working directory is set to 'backend'
      run: npm install

    # Set environment variables
    - name: Set environment variables
      run: echo "Environment variables set"
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        PORT: ${{ secrets.PORT }}
        NODE_ENV: production

    # Deploy to cPanel using FTP
    - name: Deploy to cPanel via FTP
      uses: SamKirkland/FTP-Deploy-Action@4.3.0
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./backend  # Set the backend directory for deployment
        server-dir: /music_app_API
